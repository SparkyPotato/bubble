import { CommonSignatureRequestOptions, SignatureRequestOptions } from '@stacks/connect/dist/types/types/signature';
import { StacksProvider } from '@stacks/connect/dist/types/types';
export declare function getDefaultSignatureRequestOptions(options: CommonSignatureRequestOptions): {
    appDetails?: {
        name: string;
        icon: string;
    };
    authOrigin?: string;
    network?: import("@stacks/network").StacksNetwork;
    stxAddress: string;
    userSession?: import("@stacks/auth").UserSession;
    onFinish?: import("@stacks/connect/dist/types/types").SignatureFinished;
    onCancel?: import("@stacks/connect/dist/types/types").SignatureCanceled;
};
export interface SignatureRequestPayload {
    message: string;
}
export declare const signMessage: (options: SignatureRequestOptions) => Promise<string>;
export declare function openSignatureRequestPopup(options: SignatureRequestOptions, provider?: StacksProvider): Promise<void>;
